{"ast":null,"code":"var _jsxFileName = \"/Users/michaelyoung/repos/slugsite/src/Wallet.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers'; // import styles from './Wallet.module.css'\n// import simple_token_abi from './Contracts/simple_token_abi.json'\n// import Interactions from './Interactions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wallet = () => {\n  _s();\n\n  const contractAddress = \"0xEC716F18179974bb89062287747651085e122D1C\";\n  const [tokenName, setTokenName] = useState(\"Token\");\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Please install metamask\");\n      setErrorMessage(\"Please install metamask\");\n    }\n  };\n\n  const accountChangedHandler = newAddress => {\n    setDefaultAccount(newAddress);\n    updateEthers();\n  };\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    let tempSigner = tempProvider.getSigner();\n    let tempContract = new ethers.Contract(contractAddress, token_abi, tempSigner);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: \"connButtonText\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [tokenName, \" Balance: \", balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wallet, \"pDkJkdQ0P47FudFokyqasq0vvDY=\");\n\n_c = Wallet;\nexport default Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/Users/michaelyoung/repos/slugsite/src/Wallet.js"],"names":["React","useState","useEffect","ethers","Wallet","contractAddress","tokenName","setTokenName","connButtonText","setConnButtonText","defaultAccount","setDefaultAccount","errorMessage","setErrorMessage","balance","setBalance","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAddress","updateEthers","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","token_abi"],"mappings":";;;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,QAArB,C,CACA;AACA;AACA;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,eAAe,GAAG,4CAAxB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,OAAD,CAA1C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,gBAAD,CAApD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;;AAGA,QAAMe,oBAAoB,GAAG,MAAM;AAC/B,QAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAvC,EAAkD;AAE9CF,MAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAxB,EACCC,IADD,CACMC,MAAM,IAAI;AACZC,QAAAA,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;AACAd,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACH,OAJD,EAKCgB,KALD,CAKOC,KAAK,IAAI;AACZb,QAAAA,eAAe,CAACa,KAAK,CAACC,OAAP,CAAf;AACH,OAPD;AASH,KAXD,MAWO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAhB,MAAAA,eAAe,CAAC,yBAAD,CAAf;AACH;AACJ,GAhBD;;AAkBA,QAAMW,qBAAqB,GAAIM,UAAD,IAC9B;AACInB,IAAAA,iBAAiB,CAACmB,UAAD,CAAjB;AACAC,IAAAA,YAAY;AACf,GAJD;;AAMA,QAAMA,YAAY,GAAG,MAAM;AACvB,QAAIC,YAAY,GAAG,IAAI7B,MAAM,CAAC8B,SAAP,CAAiBC,YAArB,CAAkCjB,MAAM,CAACC,QAAzC,CAAnB;AAEA,QAAIiB,UAAU,GAAGH,YAAY,CAACI,SAAb,EAAjB;AAEA,QAAIC,YAAY,GAAG,IAAIlC,MAAM,CAACmC,QAAX,CAAoBjC,eAApB,EAAqCkC,SAArC,EAAgDJ,UAAhD,CAAnB;AACH,GAND;;AASA,sBACA;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEnB,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,+BACI;AAAA,kCAAcN,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACI;AAAA,qBAAKJ,SAAL,gBAA0BQ,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAA,kBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgBH,CA5DD;;GAAMR,M;;KAAAA,M;AA8DN,eAAeA,MAAf","sourcesContent":["\nimport {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\n// import styles from './Wallet.module.css'\n// import simple_token_abi from './Contracts/simple_token_abi.json'\n// import Interactions from './Interactions';\n\nconst Wallet = () => {\n\n    const contractAddress = \"0xEC716F18179974bb89062287747651085e122D1C\";\n\n    const [tokenName, setTokenName] = useState(\"Token\");\n    const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n    const [defaultAccount, setDefaultAccount] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [balance, setBalance] = useState(null);\n    \n\n    const connectWalletHandler = () => {\n        if (window.ethereum && window.ethereum.isMetaMask){\n\n            window.ethereum.request({method: 'eth_requestAccounts'})\n            .then(result => {\n                accountChangedHandler(result[0]);\n                setConnButtonText('Wallet Connected');\n            })\n            .catch(error => {\n                setErrorMessage(error.message);\n            })\n\n        } else {\n            console.log(\"Please install metamask\");\n            setErrorMessage(\"Please install metamask\");\n        }\n    }\n\n    const accountChangedHandler = (newAddress) =>\n    {\n        setDefaultAccount(newAddress);\n        updateEthers();\n    }\n\n    const updateEthers = () => {\n        let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\n        let tempSigner = tempProvider.getSigner();\n\n        let tempContract = new ethers.Contract(contractAddress, token_abi, tempSigner);\n    }\n\n\n    return (\n    <div>\n        <button onClick={connectWalletHandler}>connButtonText</button>\n        <div>\n            <div>\n                <h3>Address: {defaultAccount}</h3>\n            </div>\n            <div>\n                <h3>{tokenName} Balance: {balance}</h3>\n            </div>\n            \n            <p>{errorMessage}</p>\n        </div>\n    </div>\n\n    );\n}\n\nexport default Wallet;"]},"metadata":{},"sourceType":"module"}