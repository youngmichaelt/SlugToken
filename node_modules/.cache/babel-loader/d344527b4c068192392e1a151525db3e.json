{"ast":null,"code":"var _jsxFileName = \"/Users/michaelyoung/repos/slugsite/src/Interactions.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport * as Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Interactions = props => {\n  _s();\n\n  const [txnHash, setTxnHash] = useState();\n  const [allowance, setAllowance] = useState();\n  const [selfAllowance, setSelfAllowance] = useState();\n  const [ApproveOrStake, setApproveOrStake] = useState();\n  const [stakeBalance, setStakeBalance] = useState(0);\n  const [unstakeBalance, setUnstakeBalance] = useState();\n  const [stakeAmountState, setStakeAmount] = useState();\n  const [stakeState, setStakeState] = useState();\n  const [txnPending, setTxnPending] = useState();\n  const [txnComplete, setTxnComplete] = useState();\n  const [tokenName, setTokenName] = useState(\"Token\");\n  const [balance, setBalance] = useState(0);\n  const [maxStakeAmount, setMaxStakeAmount] = useState(null);\n  let contract = props.contract.contract;\n  let defaultAccount = props.contract.defaultAccount;\n  let provider = props.contract.provider;\n\n  const approveOrStake = async () => {\n    let contractAddress = await contract.address;\n    let allowance = await contract.allowance(defaultAccount, contractAddress);\n    let allowanceBalance = allowance * Math.pow(10, 18);\n    setAllowance(ethers.utils.formatUnits(allowance, 18));\n    console.log(ethers.utils.formatUnits(allowance, 18));\n    let selfAllowance = await contract.allowance(defaultAccount, defaultAccount);\n    let selfAllowanceBalance = selfAllowance * Math.pow(10, 18);\n    setSelfAllowance(ethers.utils.formatUnits(selfAllowance, 18));\n\n    if (allowanceBalance > 0 && selfAllowanceBalance > 0) {\n      setApproveOrStake(\"Stake\");\n    } else {\n      setApproveOrStake(\"Approve\");\n    }\n  };\n\n  const getStakeBalance = async () => {\n    let isStakeHolder = false;\n    let stakeId = 0;\n\n    if (defaultAccount instanceof Array) {\n      [isStakeHolder, stakeId] = await contract.isStakeholder(defaultAccount[0]);\n    } else {\n      [isStakeHolder, stakeId] = await contract.isStakeholder(defaultAccount);\n    }\n\n    if (isStakeHolder == true) {\n      let stakeAmountBig = 0;\n\n      if (defaultAccount instanceof Array) {\n        stakeAmountBig = await contract.stakedTokens(defaultAccount[0]);\n      } else {\n        stakeAmountBig = await contract.stakedTokens(defaultAccount);\n      }\n\n      let stakeAmount = ethers.utils.formatUnits(stakeAmountBig, 18);\n      setStakeBalance(stakeAmount);\n    } else {\n      setStakeBalance(0);\n    }\n  };\n\n  const stakeStateHandler = () => {\n    if (stakeState == \"Unstake\") {\n      setApproveOrStake(\"Unstake\");\n    } else {\n      approveOrStake();\n    }\n  };\n\n  const approveStakeHandler = e => {\n    if (stakeState != \"Unstake\") {\n      if (e.target.value > 2) {\n        setApproveOrStake(\"STake\");\n      }\n    }\n  };\n\n  const stakeHandler = async e => {\n    e.preventDefault();\n    console.log(stakeState);\n\n    if (stakeState == \"Unstake\") {\n      let contractAddress = await contract.address;\n      let unstakeAmount = parseInt(stakeAmountState);\n      let unstakeAmountBig = ethers.utils.parseUnits(stakeAmountState, 18);\n\n      if (stakeBalance > unstakeAmount) {\n        let txn = await contract.unstakeToken(unstakeAmountBig);\n        console.log(txn);\n        setTxnHash(\"Unstake transaction confirmation hash: \" + txn.hash);\n        pollTransaction(txn.hash);\n        balance = 0;\n      } else {\n        window.alert(\"You cannot unstake more tokens than you have staked...\");\n      }\n    } else {\n      let contractAddress = await contract.address;\n      let stakeAmount = parseInt(stakeAmountState);\n      let stakeAmountBig = ethers.utils.parseUnits(stakeAmountState, 18); // let allowanceBig = ethers.utils.parseUnits(allowance.toString());\n\n      console.log(parseInt(allowance), selfAllowance, parseInt(ethers.utils.formatUnits(stakeAmountBig, 0)), stakeAmount);\n\n      if (stakeAmount <= parseInt(allowance) && stakeAmount <= parseInt(selfAllowance)) {\n        let txn = await contract.stakeToken(stakeAmountBig);\n        console.log(txn);\n        setTxnHash(\"Stake transaction confirmation hash: \" + txn.hash);\n        pollTransaction(txn.hash);\n      } else {\n        let approveSelftxn = await contract.approve(defaultAccount, stakeAmountBig);\n        let txn = await contract.approve(contractAddress, stakeAmountBig);\n        console.log(txn);\n        setTxnHash(\"Approval transaction confirmation hash: \" + txn.hash);\n        pollTransaction(txn.hash);\n      }\n    }\n  };\n\n  const unstakeHandler = async e => {\n    e.preventDefault();\n    let contractAddress = await contract.address;\n    let unstakeAmount = parseInt(e.target.unstakeAmount.value);\n    let unstakeAmountBig = ethers.utils.parseUnits(e.target.unstakeAmount.value, 18);\n\n    if (stakeBalance > unstakeAmount) {\n      let txn = await contract.unstakeToken(unstakeAmountBig);\n      console.log(txn);\n      setTxnHash(\"Unstake transaction confirmation hash: \" + txn.hash);\n      pollTransaction(txn.hash);\n      balance = 0;\n    } else {\n      window.alert(\"You cannot unstake more tokens than you have staked...\");\n    }\n  };\n\n  const pollTransaction = async txnHash => {\n    // setTxnPending(\"Pending transaction...\");\n    let txn = await provider.getTransactionReceipt(txnHash);\n    let time = 0;\n    setApproveOrStake( /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"justify-center flex\",\n      children: /*#__PURE__*/_jsxDEV(Loader.Oval, {\n        className: \"\",\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: 30,\n        width: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 27\n    }, this));\n\n    while (txn == null && time < 30) {\n      await new Promise(r => setTimeout(r, 2000));\n      txn = await provider.getTransactionReceipt(txnHash);\n      time += 1;\n    }\n\n    if (time == 30) {\n      setTxnPending(\"Time out error, check your transaction to make sure it went through\");\n    } else {\n      setTxnPending(\"txn complete\");\n    }\n\n    setTxnComplete(\"complete\");\n    stakeStateHandler();\n  };\n\n  const updateTokenName = async () => {\n    let name = await contract.name();\n    setTokenName(name);\n  };\n\n  const updateBalance = async () => {\n    let balanceBigN = 0;\n\n    if (defaultAccount instanceof Array) {\n      balanceBigN = await contract.balanceOf(defaultAccount[0]);\n    } else {\n      balanceBigN = await contract.balanceOf(defaultAccount);\n    }\n\n    let balanceNumber = balanceBigN;\n    let tokenDecimals = await contract.decimals();\n    let tokenBalance = balanceNumber / Math.pow(10, 18);\n    console.log(2 * Math.pow(10, 18));\n    setBalance(tokenBalance.toFixed(3));\n  };\n\n  const maxStakeAmountHandler = () => {\n    if (stakeState == \"Unstake\") {\n      setStakeAmount(stakeBalance);\n    } else {\n      setStakeAmount(balance);\n    }\n  };\n\n  useEffect(() => {\n    if (contract != null) {\n      updateBalance();\n      updateTokenName(); // approveOrStake();\n\n      stakeStateHandler();\n      getStakeBalance();\n    } else {\n      setApproveOrStake(\"Approve\");\n    }\n  }, [contract, defaultAccount, stakeState, txnComplete]); //contract, defaultAccount, txnPending, stakeState]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white mx-20 rounded-3xl border border-gray-200 shadow-md sm:p-6 lg:p-8 dark:bg-gray-800 dark:border-gray-700 font-mono\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mx-5 mb-5 px-4 py-2 bg-indigo-300 hover:bg-indigo-400 rounded-2xl text-center\",\n        onClick: () => setStakeState(\"Stake\"),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mx-5 mb-5 px-4 py-2 bg-indigo-300 hover:bg-indigo-400 rounded-2xl text-center\",\n        onClick: () => setStakeState(\"Unstake\"),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Unstake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"pb-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stake-detail\",\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"amount\",\n        className: \"bg-indigo-400 rounded-3xl px-5 py-10 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-15 mb-2 text-left text-black\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-10 mr-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"rounded-xl\",\n              onChange: e => {\n                setStakeAmount(e.target.value);\n                approveOrStake();\n              },\n              id: \"stakeAmount\",\n              type: \"number\",\n              min: \"0\",\n              step: \"0.001\",\n              placeholder: \"0\",\n              value: stakeAmountState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rounded-3xl bg-indigo-300 w-16 hover:bg-indigo-500\",\n            onClick: e => {\n              maxStakeAmountHandler();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 mb-10 mr-3 ml-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex pb-10 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"left-0 absolute\",\n          children: \"Balance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"right-0 absolute\",\n          children: balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-10 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"left-0 absolute\",\n          children: \"Staked balance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"right-0 absolute\",\n          children: stakeBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: stakeAmountState == 0 || stakeAmountState == null,\n      className: \"rounded-3xl bg-indigo-300 disabled:bg-indigo-100 active:bg-violet-700 hover:bg-indigo-400 w-96 py-3\",\n      type: \"submit\",\n      onClick: stakeHandler,\n      children: ApproveOrStake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Interactions, \"ukJVcKmY7TNfqNFu7vr6auGGo00=\");\n\n_c = Interactions;\nexport default Interactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interactions\");","map":{"version":3,"sources":["/Users/michaelyoung/repos/slugsite/src/Interactions.js"],"names":["React","useState","useEffect","ethers","Spinner","ProgressBar","Loader","Interactions","props","txnHash","setTxnHash","allowance","setAllowance","selfAllowance","setSelfAllowance","ApproveOrStake","setApproveOrStake","stakeBalance","setStakeBalance","unstakeBalance","setUnstakeBalance","stakeAmountState","setStakeAmount","stakeState","setStakeState","txnPending","setTxnPending","txnComplete","setTxnComplete","tokenName","setTokenName","balance","setBalance","maxStakeAmount","setMaxStakeAmount","contract","defaultAccount","provider","approveOrStake","contractAddress","address","allowanceBalance","Math","pow","utils","formatUnits","console","log","selfAllowanceBalance","getStakeBalance","isStakeHolder","stakeId","Array","isStakeholder","stakeAmountBig","stakedTokens","stakeAmount","stakeStateHandler","approveStakeHandler","e","target","value","stakeHandler","preventDefault","unstakeAmount","parseInt","unstakeAmountBig","parseUnits","txn","unstakeToken","hash","pollTransaction","window","alert","stakeToken","approveSelftxn","approve","unstakeHandler","getTransactionReceipt","time","Promise","r","setTimeout","updateTokenName","name","updateBalance","balanceBigN","balanceOf","balanceNumber","tokenDecimals","decimals","tokenBalance","toFixed","maxStakeAmountHandler"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport Spinner from 'react-bootstrap/Spinner';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport * as Loader from 'react-loader-spinner';\n\nconst Interactions = (props) => {\n\n    const [txnHash, setTxnHash] = useState();\n\n    const [allowance, setAllowance] = useState();\n    const [selfAllowance, setSelfAllowance] = useState();\n    const [ApproveOrStake, setApproveOrStake] = useState();\n    const [stakeBalance, setStakeBalance] = useState(0);\n    const [unstakeBalance, setUnstakeBalance] = useState();\n\n    const [stakeAmountState, setStakeAmount] = useState();\n    const [stakeState, setStakeState] = useState();\n\n    const [txnPending, setTxnPending] = useState();\n    const [txnComplete, setTxnComplete] = useState();\n\n    const [tokenName, setTokenName] = useState(\"Token\");\n    const [balance, setBalance] = useState(0);\n\n    const [maxStakeAmount, setMaxStakeAmount] = useState(null);\n\n    let contract = props.contract.contract;\n    let defaultAccount = props.contract.defaultAccount;\n    let provider = props.contract.provider;\n    \n\n    const approveOrStake = async () => {\n        let contractAddress = await contract.address;\n        let allowance = await contract.allowance(defaultAccount, contractAddress);\n\n        let allowanceBalance = allowance * Math.pow(10, 18);\n        setAllowance(ethers.utils.formatUnits(allowance,18));\n        console.log(ethers.utils.formatUnits(allowance,18))\n\n        let selfAllowance = await contract.allowance(defaultAccount, defaultAccount);\n        let selfAllowanceBalance = selfAllowance * Math.pow(10, 18);\n        setSelfAllowance(ethers.utils.formatUnits(selfAllowance,18));\n\n        if (allowanceBalance > 0 && selfAllowanceBalance > 0){\n            setApproveOrStake(\"Stake\");\n        } else {\n            setApproveOrStake(\"Approve\");\n        }\n    }\n\n    const getStakeBalance = async () =>{\n        let isStakeHolder = false;\n        let stakeId = 0;\n        if (defaultAccount instanceof Array){\n            [isStakeHolder, stakeId] = await contract.isStakeholder(defaultAccount[0]);\n        } else {\n            [isStakeHolder, stakeId] = await contract.isStakeholder(defaultAccount);\n        }\n        \n        \n        if (isStakeHolder == true){\n            let stakeAmountBig = 0;\n            if (defaultAccount instanceof Array){\n                stakeAmountBig = await contract.stakedTokens(defaultAccount[0]);\n            } else {\n                stakeAmountBig = await contract.stakedTokens(defaultAccount);\n            }\n            \n            let stakeAmount = ethers.utils.formatUnits(stakeAmountBig, 18)\n            setStakeBalance(stakeAmount);\n        } else {\n            setStakeBalance(0);\n        }\n    }\n\n    const stakeStateHandler = () => {\n        if (stakeState == \"Unstake\"){\n            setApproveOrStake(\"Unstake\")\n\n\n        } else {\n            approveOrStake();\n        }\n    }\n\n    const approveStakeHandler = (e) => {\n        if (stakeState != \"Unstake\"){\n            if (e.target.value > 2){\n                setApproveOrStake(\"STake\");\n            }\n        }\n    }\n\n    \n\n    \n\n    const stakeHandler = async (e) => {\n        e.preventDefault();\n\n        console.log(stakeState);\n\n        if (stakeState == \"Unstake\"){\n            let contractAddress = await contract.address;\n            let unstakeAmount = parseInt(stakeAmountState);\n            let unstakeAmountBig = ethers.utils.parseUnits(stakeAmountState, 18);\n\n            if (stakeBalance > unstakeAmount){\n                let txn = await contract.unstakeToken(unstakeAmountBig);\n                console.log(txn);\n                setTxnHash(\"Unstake transaction confirmation hash: \" + txn.hash);\n\n                pollTransaction(txn.hash);\n\n                balance = 0;\n                \n            } else {\n                window.alert(\"You cannot unstake more tokens than you have staked...\");\n            }\n        } else {\n            let contractAddress = await contract.address;\n           \n            let stakeAmount = parseInt(stakeAmountState);\n            let stakeAmountBig = ethers.utils.parseUnits(stakeAmountState, 18);\n            // let allowanceBig = ethers.utils.parseUnits(allowance.toString());\n            console.log(parseInt(allowance),selfAllowance, parseInt(ethers.utils.formatUnits(stakeAmountBig,0)), stakeAmount)\n\n            if (stakeAmount <= parseInt(allowance) && stakeAmount <= parseInt(selfAllowance)){\n\n                let txn = await contract.stakeToken(stakeAmountBig);\n                console.log(txn);\n                setTxnHash(\"Stake transaction confirmation hash: \" + txn.hash);\n                pollTransaction(txn.hash);\n\n            } else {\n                let approveSelftxn = await contract.approve(defaultAccount, stakeAmountBig);\n                let txn = await contract.approve(contractAddress, stakeAmountBig);\n                console.log(txn);\n                setTxnHash(\"Approval transaction confirmation hash: \" + txn.hash);\n                pollTransaction(txn.hash);\n            }\n        }\n        \n    }\n\n    const unstakeHandler = async (e) => {\n        e.preventDefault();\n        let contractAddress = await contract.address;\n        let unstakeAmount = parseInt(e.target.unstakeAmount.value);\n        let unstakeAmountBig = ethers.utils.parseUnits(e.target.unstakeAmount.value, 18);\n\n        if (stakeBalance > unstakeAmount){\n            let txn = await contract.unstakeToken(unstakeAmountBig);\n            console.log(txn);\n            setTxnHash(\"Unstake transaction confirmation hash: \" + txn.hash);\n\n            pollTransaction(txn.hash);\n\n            balance = 0;\n            \n        } else {\n            window.alert(\"You cannot unstake more tokens than you have staked...\");\n        }\n        \n    }\n\n    const pollTransaction = async (txnHash) => {\n        // setTxnPending(\"Pending transaction...\");\n        let txn = await provider.getTransactionReceipt(txnHash);\n        let time = 0;\n        setApproveOrStake(<span className='justify-center flex'>                \n        <Loader.Oval className='' type=\"Circles\" color=\"#00BFFF\" height={30} width={30}/>\n    </span>);\n    \n\n        while (txn == null && time < 30){\n            await new Promise(r => setTimeout(r, 2000));\n            txn = await provider.getTransactionReceipt(txnHash);\n            time += 1;\n            \n        }\n        if (time == 30){\n            setTxnPending(\"Time out error, check your transaction to make sure it went through\");\n        } else {\n            setTxnPending(\"txn complete\");\n        }\n        setTxnComplete(\"complete\");\n        stakeStateHandler();\n\n        \n    }\n    const updateTokenName = async () => {\n        let name = await contract.name();\n\n        setTokenName(name);\n    }\n    const updateBalance = async () => {\n        \n        let balanceBigN = 0;\n\n        if (defaultAccount instanceof Array){\n            balanceBigN = await contract.balanceOf(defaultAccount[0]);\n        } else {\n            balanceBigN = await contract.balanceOf(defaultAccount);\n        }\n\n        let balanceNumber = balanceBigN;\n\n        let tokenDecimals = await contract.decimals();\n\n\t\tlet tokenBalance = balanceNumber / Math.pow(10, 18);\n        console.log(2 * Math.pow(10,18))\n        setBalance(tokenBalance.toFixed(3));\n    };\n\n    const maxStakeAmountHandler = () => {\n\n        if (stakeState == \"Unstake\"){   \n            setStakeAmount(stakeBalance);\n        } else {\n            setStakeAmount(balance);\n        }\n        \n    }\n\n    useEffect(() =>{\n        if (contract != null){\n            updateBalance();\n            updateTokenName();\n            // approveOrStake();\n            stakeStateHandler();\n            getStakeBalance();\n        } else {\n            setApproveOrStake(\"Approve\");\n        }\n    },[contract, defaultAccount, stakeState, txnComplete])\n    //contract, defaultAccount, txnPending, stakeState]\n\n    return (\n        <div className='p-4 bg-white mx-20 rounded-3xl border border-gray-200 shadow-md sm:p-6 lg:p-8 dark:bg-gray-800 dark:border-gray-700 font-mono'>\n            <div className=''>\n                <button className='mx-5 mb-5 px-4 py-2 bg-indigo-300 hover:bg-indigo-400 rounded-2xl text-center' onClick={() => setStakeState(\"Stake\")}>\n                    <span>Stake</span>\n                </button>\n                <button className='mx-5 mb-5 px-4 py-2 bg-indigo-300 hover:bg-indigo-400 rounded-2xl text-center' onClick={() => setStakeState(\"Unstake\")}>\n                    <span>Unstake</span>\n                </button>\n                <hr className='pb-5'></hr>\n            </div>\n            <div id='stake-detail' className=''>\n                <div id='amount' className='bg-indigo-400 rounded-3xl px-5 py-10 relative'>\n                        <div className='px-15 mb-2 text-left text-black'>Amount</div>\n                        <div className='flex'>\n                            {/* <form className='flex' onSubmit={stakeHandler}> */}\n                            <div className='ml-10 mr-4'>\n                                <input className='rounded-xl' onChange= {(e) => {setStakeAmount(e.target.value); approveOrStake()}} id='stakeAmount' type='number' min='0' step='0.001' placeholder='0' value={stakeAmountState}></input>\n                            </div>\n                            <button className='rounded-3xl bg-indigo-300 w-16 hover:bg-indigo-500' onClick={(e) => {maxStakeAmountHandler()}}>\n                                <span>Max</span>\n                            </button>\n                            {/* </form> */}\n                        </div>\n                        \n                    \n\n\n                </div>\n                \n                {/* <form onSubmit={unstakeHandler}>\n                    <h3>Unstake tokens </h3>\n                    <p>Amount</p>\n                    <input type='number' id='unstakeAmount' min='0' step='0.001' placeholder='0'></input>\n                    <button type='submit'>Unstake</button>\n                </form> */}\n            </div>\n\n            <div className='mt-10 mb-10 mr-3 ml-3'>\n                    <div className='flex pb-10 relative'>\n                        <p className='left-0 absolute'>Balance: </p>\n                        <p className='right-0 absolute'>{balance}</p>\n                    </div>\n                    <div className='flex mb-10 relative'>\n                        <p className='left-0 absolute' >Staked balance: </p>\n                        <p className='right-0 absolute' >{stakeBalance}</p>\n                    </div>\n                </div>\n                {/* <button type='submit' onClick={stakeHandler}>{ApproveOrStake}</button> */}\n                {/* <form onSubmit={stakeHandler}>\n                    <h3>Stake tokens </h3>\n                    <p>Amount</p> */}\n                    {/* <input type='number' id='stakeAmount' min='0' step='0.001' placeholder='0'></input> */}\n                    {/* <button type='submit' onClick={stakeHandler}>{ApproveOrStake}</button> */}\n                {/* </form> */}\n                \n\n                <button disabled={stakeAmountState==0 || stakeAmountState == null} className='rounded-3xl bg-indigo-300 disabled:bg-indigo-100 active:bg-violet-700 hover:bg-indigo-400 w-96 py-3' type='submit' onClick={stakeHandler}>\n                    \n                {ApproveOrStake}\n                </button>\n                \n            \n            <div className='px-10'>\n                {/* {txnPending} */}\n\n\n            </div>\n            {/* <div>\n\t\t\t\t{txnHash}\n\t\t\t</div> */}\n\n\n            {/* <div class=\"p-4 max-w-sm bg-white rounded-lg border border-gray-200 shadow-md sm:p-6 lg:p-8 dark:bg-gray-800 dark:border-gray-700\">\n            <form class=\"space-y-6\" action=\"#\">\n            <h5 class=\"text-xl font-medium text-gray-900 dark:text-white\">Sign in to our platform</h5>\n            <div>\n            <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Your email</label>\n            <input type=\"email\" name=\"email\" id=\"email\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\" placeholder=\"name@company.com\" required=\"\"/>\n            </div>\n            <div>\n            <label for=\"password\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Your password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\" required=\"\"/>\n            </div>\n            <div class=\"flex items-start\">\n            <div class=\"flex items-start\">\n            <div class=\"flex items-center h-5\">\n            </div>\n            <label for=\"remember\" class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Remember me</label>\n            </div>\n            <a href=\"#\" class=\"ml-auto text-sm text-blue-700 hover:underline dark:text-blue-500\">Lost Password?</a>\n            </div>\n            <button type=\"submit\" class=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Login to your account</button>\n            <div class=\"text-sm font-medium text-gray-500 dark:text-gray-300\">\n            Not registered? <a href=\"#\" class=\"text-blue-700 hover:underline dark:text-blue-500\">Create account</a>\n            </div>\n            </form>\n            </div> */}\n\n\n        </div>\n        \n\n    );\n\n}\n\nexport default Interactions;"]},"metadata":{},"sourceType":"module"}