{"ast":null,"code":"var _jsxFileName = \"/Users/michaelyoung/repos/SlugToken/src/Wallet.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport styles from './Wallet.module.css'; // import simple_token_abi from './Contracts/simple_token_abi.json'\n\nimport Interactions from './Interactions';\nimport ErrorModal from './ErrorModal';\nimport token_abi from './contracts/abi.json';\nimport EventTable from './EventTable'; // import NavBar from './NavBar';\n\nimport NavBar from './NavBar-app.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wallet = () => {\n  _s();\n\n  const contractAddress = \"0x290Aa71b3e2A0ce00CeD0b2178985114a66B8e36\";\n  const [tokenName, setTokenName] = useState(\"Token\");\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [modalOpen, setModalOpen] = useState();\n  const [ethersUpdated, setEthersUpdated] = useState(false);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"Use Metamask!\");\n      } else {\n        console.log(\"Ethereum object found\", ethereum); //   detailsOn();\n      }\n\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(accounts);\n\n      if (accounts.length != 0) {\n        // if(accounts[0] != defaultAccount){\n        //     setConnButtonText('Not Connected');\n        // } else {\n        const account = accounts[0];\n        console.log(\"Found an authorized account \", account);\n        setDefaultAccount(account);\n        updateEthers();\n        setConnButtonText('Connected'); // }\n        //   detailsOn();\n      } else {\n        console.log(\"Could not find an authorized account\");\n        setConnButtonText('Not Connected');\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(error);\n      setModalOpen(true);\n    }\n  };\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        // console.log(result)\n        accountChangedHandler(result[0]);\n        setConnButtonText('Connected');\n      }).catch(error => {\n        console.log(error);\n        setErrorMessage(error.message);\n        setModalOpen(true);\n      });\n    } else {\n      console.log(\"Please install metamask\");\n      setErrorMessage(\"Please install metamask\");\n      setModalOpen(true);\n    }\n  };\n\n  const accountChangedHandler = newAddress => {\n    if (newAddress instanceof Array) {\n      setDefaultAccount(newAddress[0]);\n    } else {\n      setDefaultAccount(newAddress);\n    }\n\n    updateEthers();\n  };\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    let tempSigner = tempProvider.getSigner();\n    let tempContract = new ethers.Contract(contractAddress, token_abi, tempSigner);\n    setProvider(tempProvider);\n    setSigner(tempSigner);\n    setContract(tempContract);\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  if (window.ethereum) {\n    // listen for account changes\n    window.ethereum.on('accountsChanged', accountChangedHandler);\n    window.ethereum.on('chainChanged', chainChangedHandler);\n  }\n\n  function toFixed(x) {\n    if (Math.abs(x) < 1.0) {\n      var e = parseInt(x.toString().split('e-')[1]);\n\n      if (e) {\n        x *= Math.pow(10, e - 1);\n        x = '0.' + new Array(e).join('0') + x.toString().substring(2);\n      }\n    } else {\n      var e = parseInt(x.toString().split('+')[1]);\n\n      if (e > 20) {\n        e -= 20;\n        x /= Math.pow(10, e);\n        x += new Array(e + 1).join('0');\n      }\n    }\n\n    return x;\n  }\n\n  useEffect(() => {\n    if (defaultAccount == null) {\n      checkIfWalletIsConnected();\n    } //checkIfWalletIsConnected();\n    // if (contract != null){\n    //     updateBalance();\n    //     updateTokenName();\n    // } \n\n  }, [contract, defaultAccount, window.ethereum]);\n  let props = {\n    contract: contract,\n    defaultAccount: defaultAccount,\n    provider: provider,\n    setOpenModal: x => {\n      setModalOpen(x);\n    },\n    setErrorMessage: x => {\n      setErrorMessage(x);\n    }\n  };\n  let modal_props = {\n    contract: contract,\n    defaultAccount: defaultAccount,\n    provider: provider,\n    setOpenModal: x => {\n      setModalOpen(x);\n    },\n    ErrorMessage: errorMessage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[url('/src/slugp.png')]  md:bg-cover bg-no-repeat bg-center md:bg-top w-screen h-screen scroll   \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-2 bottom-3 left-3 absolute bg-white border rounded-2xl\",\n        id: styles.connectWalletButtton,\n        onClick: connectWalletHandler,\n        children: connButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xl:mt-[125px] lg:mt-[125px]  md:mt-[115px]  sm:mt-[90px] mt-[50px] xl:text-xl lg:text-xl md:text-xl sm:text-xl text-xl \",\n        id: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-7 \",\n          children: /*#__PURE__*/_jsxDEV(Interactions, {\n            contract: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-3\",\n          children: modalOpen && /*#__PURE__*/_jsxDEV(ErrorModal, {\n            setOpenModal: modal_props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-5\",\n          children: \"Recent Taxes Collected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 mb-[150px] flex items-center justify-center \",\n          children: /*#__PURE__*/_jsxDEV(EventTable, {\n            contract: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wallet, \"AHci0kpuKz06UdbSgAR732KqCNU=\");\n\n_c = Wallet;\nexport default Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/Users/michaelyoung/repos/SlugToken/src/Wallet.js"],"names":["React","useState","useEffect","ethers","styles","Interactions","ErrorModal","token_abi","EventTable","NavBar","Wallet","contractAddress","tokenName","setTokenName","connButtonText","setConnButtonText","defaultAccount","setDefaultAccount","errorMessage","setErrorMessage","balance","setBalance","provider","setProvider","signer","setSigner","contract","setContract","modalOpen","setModalOpen","ethersUpdated","setEthersUpdated","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","updateEthers","error","connectWalletHandler","isMetaMask","then","result","accountChangedHandler","catch","message","newAddress","Array","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","chainChangedHandler","location","reload","on","toFixed","x","Math","abs","e","parseInt","toString","split","pow","join","substring","props","setOpenModal","modal_props","ErrorMessage","connectWalletButtton","container"],"mappings":"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","sourcesContent":["\nimport {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Wallet.module.css'\n// import simple_token_abi from './Contracts/simple_token_abi.json'\nimport Interactions from './Interactions';\nimport ErrorModal from './ErrorModal';\nimport token_abi from './contracts/abi.json'\n\nimport EventTable from './EventTable';\n// import NavBar from './NavBar';\nimport NavBar from './NavBar-app.js';\n\n\n\nconst Wallet = () => {\n\n    const contractAddress = \"0x290Aa71b3e2A0ce00CeD0b2178985114a66B8e36\";\n\n    const [tokenName, setTokenName] = useState(\"Token\");\n    const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n    const [defaultAccount, setDefaultAccount] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [balance, setBalance] = useState();\n\n    const [provider, setProvider] = useState(null);\n    const [signer, setSigner] = useState(null);\n    const [contract, setContract] = useState(null);\n\n    const [modalOpen, setModalOpen] = useState();\n    const [ethersUpdated, setEthersUpdated] = useState(false);\n\n    \n    const checkIfWalletIsConnected = async () => {\n        try{\n            const { ethereum } = window;\n      \n            if(!ethereum){\n              console.log(\"Use Metamask!\");\n            } else{\n              console.log(\"Ethereum object found\", ethereum);\n            //   detailsOn();\n            }\n      \n            const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n            console.log(accounts)\n            if(accounts.length != 0){\n                // if(accounts[0] != defaultAccount){\n                //     setConnButtonText('Not Connected');\n                // } else {\n                    const account = accounts[0];\n                    console.log(\"Found an authorized account \", account);\n                    setDefaultAccount(account);\n                    updateEthers();\n                    setConnButtonText('Connected');\n                // }\n              \n            //   detailsOn();\n    \n            } else{\n              console.log(\"Could not find an authorized account\");\n              setConnButtonText('Not Connected');\n            }\n          } catch(error){\n            console.log(error);\n            setErrorMessage(error);\n            setModalOpen(true);\n          }\n    }\n\n    const connectWalletHandler = () => {\n        if (window.ethereum && window.ethereum.isMetaMask){\n\n            window.ethereum.request({method: 'eth_requestAccounts'})\n            .then(result => {\n                // console.log(result)\n                accountChangedHandler(result[0]);\n                setConnButtonText('Connected');\n            })\n            .catch(error => {\n                console.log(error)\n                setErrorMessage(error.message);\n                setModalOpen(true);\n            })\n\n        } else {\n            console.log(\"Please install metamask\");\n            setErrorMessage(\"Please install metamask\");\n            setModalOpen(true);\n        }\n    }\n\n    const accountChangedHandler = (newAddress) =>\n    {\n        if (newAddress instanceof Array){\n        setDefaultAccount(newAddress[0]);\n        } else {\n            setDefaultAccount(newAddress);\n        }\n        updateEthers();\n    }\n\n    const updateEthers = () => {\n       \n        let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\n        let tempSigner = tempProvider.getSigner();\n\n        let tempContract = new ethers.Contract(contractAddress, token_abi, tempSigner);\n\n        setProvider(tempProvider);\n        setSigner(tempSigner);\n        setContract(tempContract);\n    }\n\n    \n\n    \n\n    \n    const chainChangedHandler = () => {\n\t\t// reload the page to avoid any errors with chain change mid use of application\n\t\twindow.location.reload();\n\t}\n    if (window.ethereum){\n        // listen for account changes\n        window.ethereum.on('accountsChanged', accountChangedHandler);\n\n        window.ethereum.on('chainChanged', chainChangedHandler);\n\n    }\n\t\n\n    function toFixed(x) {\n        if (Math.abs(x) < 1.0) {\n           var e = parseInt(x.toString().split('e-')[1]);\n           if (e) {\n              x *= Math.pow(10, e - 1);\n              x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n           }\n        } else {\n           var e = parseInt(x.toString().split('+')[1]);\n           if (e > 20) {\n              e -= 20;\n              x /= Math.pow(10, e);\n              x += (new Array(e + 1)).join('0');\n           }\n        }\n        return x;\n     }\n\n     useEffect(() => {\n        if (defaultAccount == null){\n            checkIfWalletIsConnected();\n        }\n        //checkIfWalletIsConnected();\n        // if (contract != null){\n            \n        //     updateBalance();\n        //     updateTokenName();\n        // } \n    }, [contract, defaultAccount, window.ethereum])\n\n     let props = {\n         contract: contract,\n         defaultAccount: defaultAccount,\n         provider: provider,\n         setOpenModal: (x) => {setModalOpen(x)},\n         setErrorMessage: (x) => {setErrorMessage(x)},\n\n     }\n\n     let modal_props = {\n        contract: contract,\n        defaultAccount: defaultAccount,\n        provider: provider,\n        setOpenModal: (x) => {setModalOpen(x)},\n        ErrorMessage: errorMessage\n        \n     }\n\n    return (\n    <div className=\"bg-[url('/src/slugp.png')]  md:bg-cover bg-no-repeat bg-center md:bg-top w-screen h-screen scroll   \">\n        {/* <div className='justify-end flex '>\n                    <NavBar className=''/>\n                    \n        </div> */}\n        <div className=''>\n            <NavBar className=''/>\n            <button className='p-2 bottom-3 left-3 absolute bg-white border rounded-2xl' id={styles.connectWalletButtton} onClick={connectWalletHandler}>{connButtonText}</button>\n            {/* <h3 id={styles.header} className=''>Slug Token</h3> */}\n        </div>\n\n        \n        \n        <div>\n            \n            {/* <div>\n                <h3>Address: {defaultAccount}</h3>\n            </div> */}                \n\n\n            <div className='xl:mt-[125px] lg:mt-[125px]  md:mt-[115px]  sm:mt-[90px] mt-[50px] xl:text-xl lg:text-xl md:text-xl sm:text-xl text-xl ' id={styles.container}>\n                \n                <div className='flex items-center justify-center mb-7 '>\n                    \n                <Interactions contract={props}/>\n                </div>\n                <div className='flex items-center justify-center mb-3'>\n                    {modalOpen && <ErrorModal setOpenModal={modal_props}></ErrorModal>}\n\n                </div>\n\n                <hr className='my-10'/>\n                <h3 className='mb-5'>Recent Taxes Collected</h3>\n                <div className='mt-2 mb-[150px] flex items-center justify-center '>\n                <EventTable contract={props}/>\n                </div>\n                \n                \n\n\n\n                {/* <EventTable contract={props}/> */}\n            </div>\n\n            {/* <button\n        className=\"openModalBtn\"\n        onClick={() => {\n          setModalOpen(true);\n        }}\n      >\n        ERROR TEST\n      </button> */}\n          \n\n            \n            \n            {/* <p>{errorMessage}</p> */}\n        </div>\n\n    </div>\n\n    );\n}\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}