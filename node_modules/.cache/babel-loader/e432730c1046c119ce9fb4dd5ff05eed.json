{"ast":null,"code":"var _jsxFileName = \"/Users/michaelyoung/repos/SlugToken/src/Wallet.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport styles from './Wallet.module.css'; // import simple_token_abi from './Contracts/simple_token_abi.json'\n\nimport Interactions from './Interactions';\nimport ErrorModal from './ErrorModal';\nimport token_abi from './contracts/abi.json';\nimport EventTable from './EventTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wallet = () => {\n  _s();\n\n  const contractAddress = \"0x290Aa71b3e2A0ce00CeD0b2178985114a66B8e36\";\n  const [tokenName, setTokenName] = useState(\"Token\");\n  const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [balance, setBalance] = useState();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [modalOpen, setModalOpen] = useState();\n  const [ethersUpdated, setEthersUpdated] = useState(false);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"Use Metamask!\");\n      } else {\n        console.log(\"Ethereum object found\", ethereum); //   detailsOn();\n      }\n\n      const accounts = await ethereum.request({\n        method: 'eth_accounts'\n      }); // console.log(accounts)\n\n      if (accounts.length != 0) {\n        // if(accounts[0] != defaultAccount){\n        //     setConnButtonText('Not Connected');\n        // } else {\n        const account = accounts[0];\n        console.log(\"Found an authorized account \", account);\n        setDefaultAccount(account);\n        updateEthers();\n        setConnButtonText('Connected'); // }\n        //   detailsOn();\n      } else {\n        console.log(\"Could not find an authorized account\");\n        setConnButtonText('Not Connected');\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(error);\n      setModalOpen(true);\n    }\n  };\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        // console.log(result)\n        accountChangedHandler(result[0]);\n        setConnButtonText('Connected');\n      }).catch(error => {\n        console.log(error);\n        setErrorMessage(error.message);\n        setModalOpen(true);\n      });\n    } else {\n      console.log(\"Please install metamask\");\n      setErrorMessage(\"Please install metamask\");\n      setModalOpen(true);\n    }\n  };\n\n  const accountChangedHandler = newAddress => {\n    setEthersUpdated(false);\n    setDefaultAccount(newAddress);\n    updateEthers();\n  };\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    let tempSigner = tempProvider.getSigner();\n    let tempContract = new ethers.Contract(contractAddress, token_abi, tempSigner);\n    setProvider(tempProvider);\n    setSigner(tempSigner);\n    setContract(tempContract);\n    setEthersUpdated(true);\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  if (window.ethereum) {\n    // listen for account changes\n    window.ethereum.on('accountsChanged', accountChangedHandler);\n    window.ethereum.on('chainChanged', chainChangedHandler);\n  }\n\n  function toFixed(x) {\n    if (Math.abs(x) < 1.0) {\n      var e = parseInt(x.toString().split('e-')[1]);\n\n      if (e) {\n        x *= Math.pow(10, e - 1);\n        x = '0.' + new Array(e).join('0') + x.toString().substring(2);\n      }\n    } else {\n      var e = parseInt(x.toString().split('+')[1]);\n\n      if (e > 20) {\n        e -= 20;\n        x /= Math.pow(10, e);\n        x += new Array(e + 1).join('0');\n      }\n    }\n\n    return x;\n  }\n\n  useEffect(() => {\n    if (defaultAccount == null) {\n      checkIfWalletIsConnected();\n    } //checkIfWalletIsConnected();\n    // if (contract != null){\n    //     updateBalance();\n    //     updateTokenName();\n    // } \n\n  }, [contract, defaultAccount, window.ethereum]);\n  let props = {\n    contract: contract,\n    defaultAccount: defaultAccount,\n    provider: provider,\n    setOpenModal: x => {\n      setModalOpen(x);\n    },\n    setErrorMessage: x => {\n      setErrorMessage(x);\n    }\n  };\n  let modal_props = {\n    contract: contract,\n    defaultAccount: defaultAccount,\n    provider: provider,\n    setOpenModal: x => {\n      setModalOpen(x);\n    },\n    ErrorMessage: errorMessage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: styles.connectWalletButton,\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"pt-5\",\n        children: \"Slug Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-[50px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-7\",\n          children: /*#__PURE__*/_jsxDEV(Interactions, {\n            contract: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-3\",\n          children: modalOpen && /*#__PURE__*/_jsxDEV(ErrorModal, {\n            setOpenModal: modal_props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-5\",\n          children: \"Recent Taxes Collected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 mb-[150px] flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(EventTable, {\n            contract: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"openModalBtn\",\n        onClick: () => {\n          setModalOpen(true);\n        },\n        children: \"ERROR TEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wallet, \"AHci0kpuKz06UdbSgAR732KqCNU=\");\n\n_c = Wallet;\nexport default Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/Users/michaelyoung/repos/SlugToken/src/Wallet.js"],"names":["React","useState","useEffect","ethers","styles","Interactions","ErrorModal","token_abi","EventTable","Wallet","contractAddress","tokenName","setTokenName","connButtonText","setConnButtonText","defaultAccount","setDefaultAccount","errorMessage","setErrorMessage","balance","setBalance","provider","setProvider","signer","setSigner","contract","setContract","modalOpen","setModalOpen","ethersUpdated","setEthersUpdated","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","updateEthers","error","connectWalletHandler","isMetaMask","then","result","accountChangedHandler","catch","message","newAddress","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","chainChangedHandler","location","reload","on","toFixed","x","Math","abs","e","parseInt","toString","split","pow","Array","join","substring","props","setOpenModal","modal_props","ErrorMessage","connectWalletButton"],"mappings":"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","sourcesContent":["\nimport {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Wallet.module.css'\n// import simple_token_abi from './Contracts/simple_token_abi.json'\nimport Interactions from './Interactions';\nimport ErrorModal from './ErrorModal';\nimport token_abi from './contracts/abi.json'\n\nimport EventTable from './EventTable';\n\nconst Wallet = () => {\n\n    const contractAddress = \"0x290Aa71b3e2A0ce00CeD0b2178985114a66B8e36\";\n\n    const [tokenName, setTokenName] = useState(\"Token\");\n    const [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n    const [defaultAccount, setDefaultAccount] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [balance, setBalance] = useState();\n\n    const [provider, setProvider] = useState(null);\n    const [signer, setSigner] = useState(null);\n    const [contract, setContract] = useState(null);\n\n    const [modalOpen, setModalOpen] = useState();\n    const [ethersUpdated, setEthersUpdated] = useState(false);\n\n    \n    const checkIfWalletIsConnected = async () => {\n        try{\n            const { ethereum } = window;\n      \n            if(!ethereum){\n              console.log(\"Use Metamask!\");\n            } else{\n              console.log(\"Ethereum object found\", ethereum);\n            //   detailsOn();\n            }\n      \n            const accounts = await ethereum.request({method: 'eth_accounts'});\n            // console.log(accounts)\n            if(accounts.length != 0){\n                // if(accounts[0] != defaultAccount){\n                //     setConnButtonText('Not Connected');\n                // } else {\n                    const account = accounts[0];\n                    console.log(\"Found an authorized account \", account);\n                    setDefaultAccount(account);\n                    updateEthers();\n                    setConnButtonText('Connected');\n                // }\n              \n            //   detailsOn();\n    \n            } else{\n              console.log(\"Could not find an authorized account\");\n              setConnButtonText('Not Connected');\n            }\n          } catch(error){\n            console.log(error);\n            setErrorMessage(error);\n            setModalOpen(true);\n          }\n    }\n\n    const connectWalletHandler = () => {\n        if (window.ethereum && window.ethereum.isMetaMask){\n\n            window.ethereum.request({method: 'eth_requestAccounts'})\n            .then(result => {\n                // console.log(result)\n                accountChangedHandler(result[0]);\n                setConnButtonText('Connected');\n            })\n            .catch(error => {\n                console.log(error)\n                setErrorMessage(error.message);\n                setModalOpen(true);\n            })\n\n        } else {\n            console.log(\"Please install metamask\");\n            setErrorMessage(\"Please install metamask\");\n            setModalOpen(true);\n        }\n    }\n\n    const accountChangedHandler = (newAddress) =>\n    {\n        setEthersUpdated(false);\n        setDefaultAccount(newAddress);\n        updateEthers();\n    }\n\n    const updateEthers = () => {\n       \n        let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\n        let tempSigner = tempProvider.getSigner();\n\n        let tempContract = new ethers.Contract(contractAddress, token_abi, tempSigner);\n\n        setProvider(tempProvider);\n        setSigner(tempSigner);\n        setContract(tempContract);\n        setEthersUpdated(true);\n    }\n\n    \n\n    \n    const chainChangedHandler = () => {\n\t\t// reload the page to avoid any errors with chain change mid use of application\n\t\twindow.location.reload();\n\t}\n    if (window.ethereum){\n        // listen for account changes\n        window.ethereum.on('accountsChanged', accountChangedHandler);\n\n        window.ethereum.on('chainChanged', chainChangedHandler);\n    }\n\t\n\n    function toFixed(x) {\n        if (Math.abs(x) < 1.0) {\n           var e = parseInt(x.toString().split('e-')[1]);\n           if (e) {\n              x *= Math.pow(10, e - 1);\n              x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n           }\n        } else {\n           var e = parseInt(x.toString().split('+')[1]);\n           if (e > 20) {\n              e -= 20;\n              x /= Math.pow(10, e);\n              x += (new Array(e + 1)).join('0');\n           }\n        }\n        return x;\n     }\n\n     useEffect(() => {\n        if (defaultAccount == null){\n            checkIfWalletIsConnected();\n        }\n        //checkIfWalletIsConnected();\n        // if (contract != null){\n            \n        //     updateBalance();\n        //     updateTokenName();\n        // } \n    }, [contract, defaultAccount, window.ethereum])\n\n     let props = {\n         contract: contract,\n         defaultAccount: defaultAccount,\n         provider: provider,\n         setOpenModal: (x) => {setModalOpen(x)},\n         setErrorMessage: (x) => {setErrorMessage(x)}\n\n     }\n\n     let modal_props = {\n        contract: contract,\n        defaultAccount: defaultAccount,\n        provider: provider,\n        setOpenModal: (x) => {setModalOpen(x)},\n        ErrorMessage: errorMessage\n        \n     }\n\n    return (\n    <div>\n        <button id={styles.connectWalletButton} onClick={connectWalletHandler}>{connButtonText}</button>\n        <div>\n            <h3 className='pt-5'>Slug Token</h3>\n            {/* <div>\n                <h3>Address: {defaultAccount}</h3>\n            </div> */}                \n\n\n            <div className='mt-[50px]'>\n\n                <div className='flex items-center justify-center mb-7'>\n                    \n                <Interactions contract={props}/>\n                </div>\n                <div className='flex items-center justify-center mb-3'>\n                    {modalOpen && <ErrorModal setOpenModal={modal_props}></ErrorModal>}\n\n                </div>\n\n\n                <hr className='my-10'/>\n                <h3 className='mb-5'>Recent Taxes Collected</h3>\n                <div className='mt-2 mb-[150px] flex items-center justify-center'>\n                <EventTable contract={props}/>\n                </div>\n                \n\n\n\n                {/* <EventTable contract={props}/> */}\n            </div>\n\n            <button\n        className=\"openModalBtn\"\n        onClick={() => {\n          setModalOpen(true);\n        }}\n      >\n        ERROR TEST\n      </button>\n          \n\n            \n            \n            {/* <p>{errorMessage}</p> */}\n        </div>\n\n    </div>\n\n    );\n}\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}