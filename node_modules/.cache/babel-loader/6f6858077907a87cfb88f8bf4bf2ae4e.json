{"ast":null,"code":"var _jsxFileName = \"/Users/michaelyoung/repos/slugsite/src/Interactions.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Interactions = (contract, defaultAccount) => {\n  _s();\n\n  const [allowance, setAllowance] = useState();\n  const [ApproveOrStake, setApproveOrStake] = useState();\n\n  const approveOrStake = async () => {\n    let contractAddress = await contract.address;\n    let allowance = await contract.allowance(defaultAccount, contractAddress);\n    let allowanceBalance = allowance / Math.pow(10, 18);\n\n    if (allowanceBalance > 0) {\n      setApproveOrStake(\"Stake\");\n    } else {\n      setApproveOrStake(\"Approve\");\n    }\n  };\n\n  useEffect(async () => {\n    if (contract != null) {\n      approveOrStake();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stake tokens \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"stakeAmount\",\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: ApproveOrStake\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Interactions, \"WFoHRwlYLoAdt3agL7TgnhUDZjU=\");\n\n_c = Interactions;\nexport default Interactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interactions\");","map":{"version":3,"sources":["/Users/michaelyoung/repos/slugsite/src/Interactions.js"],"names":["React","useState","useEffect","ethers","Interactions","contract","defaultAccount","allowance","setAllowance","ApproveOrStake","setApproveOrStake","approveOrStake","contractAddress","address","allowanceBalance","Math","pow"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,cAAX,KAA8B;AAAA;;AAE/C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,EAApD;;AAGA,QAAMU,cAAc,GAAG,YAAY;AAC/B,QAAIC,eAAe,GAAG,MAAMP,QAAQ,CAACQ,OAArC;AACI,QAAIN,SAAS,GAAG,MAAMF,QAAQ,CAACE,SAAT,CAAmBD,cAAnB,EAAmCM,eAAnC,CAAtB;AAEA,QAAIE,gBAAgB,GAAGP,SAAS,GAAGQ,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,EAAb,CAAnC;;AAEA,QAAIF,gBAAgB,GAAG,CAAvB,EAAyB;AACrBJ,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,SAAD,CAAjB;AACH;AACR,GAXD;;AAaAR,EAAAA,SAAS,CAAC,YAAW;AACjB,QAAIG,QAAQ,IAAI,IAAhB,EAAqB;AACjBM,MAAAA,cAAc;AAGjB;AACJ,GANQ,CAAT;AAQA,sBACI;AAAA,2BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,aAAxB;AAAsC,QAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuBF;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvCD;;GAAML,Y;;KAAAA,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\n\nconst Interactions = (contract, defaultAccount) => {\n\n    const [allowance, setAllowance] = useState();\n    const [ApproveOrStake, setApproveOrStake] = useState();\n    \n\n    const approveOrStake = async () => {\n        let contractAddress = await contract.address;\n            let allowance = await contract.allowance(defaultAccount, contractAddress);\n\n            let allowanceBalance = allowance / Math.pow(10, 18);\n\n            if (allowanceBalance > 0){\n                setApproveOrStake(\"Stake\");\n            } else {\n                setApproveOrStake(\"Approve\");\n            }\n    }\n\n    useEffect(async () =>{\n        if (contract != null){\n            approveOrStake();\n\n\n        }\n    })\n\n    return (\n        <div>\n            <form>\n                <h3>Stake tokens </h3>\n                <p>Amount</p>\n                <input type='number' id='stakeAmount' min='0'></input>\n                <button type='submit'>{ApproveOrStake}</button>\n            </form>\n        </div>\n\n    );\n\n}\n\nexport default Interactions;"]},"metadata":{},"sourceType":"module"}