{"ast":null,"code":"var _jsxFileName = \"/Users/michaelyoung/repos/slugsite/src/Interactions.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Interactions = props => {\n  _s();\n\n  const [allowance, setAllowance] = useState();\n  const [ApproveOrStake, setApproveOrStake] = useState();\n  const [stakeBalance, setStakeBalance] = useState();\n  let contract = props.contract.contract;\n  let defaultAccount = props.contract.defaultAccount;\n\n  const approveOrStake = async e => {\n    let contractAddress = await contract.address;\n    let allowance = await contract.allowance(defaultAccount, contractAddress);\n    let allowanceBalance = allowance / Math.pow(10, 18);\n\n    if (allowanceBalance > e) {\n      setApproveOrStake(\"Stake\");\n    } else {\n      setApproveOrStake(\"Approve\");\n    }\n  };\n\n  const getStakeBalance = async () => {\n    let [isStakeHolder, stakeId] = await contract.isStakeHolder(defaultAccount);\n\n    if (isStakeHolder == true) {\n      let stakeAmount = await contract.stakedTokens(defaultAccount);\n      setStakeBalance(stakeAmount);\n    }\n  };\n\n  const stakeHandler = async () => {\n    let contractAddress = await contract.address;\n    let allowance = await contract.allowance(defaultAccount, contractAddress);\n    let allowanceBalance = allowance / Math.pow(10, 18); // if (allowanceBalance > )\n  };\n\n  useEffect(() => {\n    if (contract != null) {\n      approveOrStake();\n      getStakeBalance();\n    } else {\n      setApproveOrStake(\"Approve\");\n    }\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stake tokens \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"stakeAmount\",\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: ApproveOrStake\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Staked balance: \", stakeBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Interactions, \"Oi6g/h6jdtN056I+D9FB2iT3lHQ=\");\n\n_c = Interactions;\nexport default Interactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interactions\");","map":{"version":3,"sources":["/Users/michaelyoung/repos/slugsite/src/Interactions.js"],"names":["React","useState","useEffect","ethers","Interactions","props","allowance","setAllowance","ApproveOrStake","setApproveOrStake","stakeBalance","setStakeBalance","contract","defaultAccount","approveOrStake","e","contractAddress","address","allowanceBalance","Math","pow","getStakeBalance","isStakeHolder","stakeId","stakeAmount","stakedTokens","stakeHandler"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAG5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,EAApD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AAEA,MAAIW,QAAQ,GAAGP,KAAK,CAACO,QAAN,CAAeA,QAA9B;AACA,MAAIC,cAAc,GAAGR,KAAK,CAACO,QAAN,CAAeC,cAApC;;AAGA,QAAMC,cAAc,GAAG,MAAOC,CAAP,IAAa;AAChC,QAAIC,eAAe,GAAG,MAAMJ,QAAQ,CAACK,OAArC;AACA,QAAIX,SAAS,GAAG,MAAMM,QAAQ,CAACN,SAAT,CAAmBO,cAAnB,EAAmCG,eAAnC,CAAtB;AAEA,QAAIE,gBAAgB,GAAGZ,SAAS,GAAGa,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,EAAb,CAAnC;;AAEA,QAAIF,gBAAgB,GAAGH,CAAvB,EAAyB;AACrBN,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,SAAD,CAAjB;AACH;AACJ,GAXD;;AAaA,QAAMY,eAAe,GAAG,YAAW;AAC/B,QAAI,CAACC,aAAD,EAAgBC,OAAhB,IAA2B,MAAMX,QAAQ,CAACU,aAAT,CAAuBT,cAAvB,CAArC;;AAEA,QAAIS,aAAa,IAAI,IAArB,EAA0B;AACtB,UAAIE,WAAW,GAAG,MAAMZ,QAAQ,CAACa,YAAT,CAAsBZ,cAAtB,CAAxB;AACAF,MAAAA,eAAe,CAACa,WAAD,CAAf;AACH;AACJ,GAPD;;AASA,QAAME,YAAY,GAAG,YAAY;AAC7B,QAAIV,eAAe,GAAG,MAAMJ,QAAQ,CAACK,OAArC;AACA,QAAIX,SAAS,GAAG,MAAMM,QAAQ,CAACN,SAAT,CAAmBO,cAAnB,EAAmCG,eAAnC,CAAtB;AACA,QAAIE,gBAAgB,GAAGZ,SAAS,GAAGa,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,EAAb,CAAnC,CAH6B,CAK7B;AACH,GAND;;AAQAlB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIU,QAAQ,IAAI,IAAhB,EAAqB;AACjBE,MAAAA,cAAc;AACdO,MAAAA,eAAe;AAClB,KAHD,MAGO;AACHZ,MAAAA,iBAAiB,CAAC,SAAD,CAAjB;AACH;AACJ,GAPQ,EAOP,CAACG,QAAD,CAPO,CAAT;AASA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,aAAxB;AAAsC,QAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,6BACI;AAAA,uCAAqBE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjED;;GAAMN,Y;;KAAAA,Y;AAmEN,eAAeA,YAAf","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\n\nconst Interactions = (props) => {\n\n\n    const [allowance, setAllowance] = useState();\n    const [ApproveOrStake, setApproveOrStake] = useState();\n    const [stakeBalance, setStakeBalance] = useState();\n\n    let contract = props.contract.contract;\n    let defaultAccount = props.contract.defaultAccount;\n    \n\n    const approveOrStake = async (e) => {\n        let contractAddress = await contract.address;\n        let allowance = await contract.allowance(defaultAccount, contractAddress);\n\n        let allowanceBalance = allowance / Math.pow(10, 18);\n\n        if (allowanceBalance > e){\n            setApproveOrStake(\"Stake\");\n        } else {\n            setApproveOrStake(\"Approve\");\n        }\n    }\n\n    const getStakeBalance = async () =>{\n        let [isStakeHolder, stakeId] = await contract.isStakeHolder(defaultAccount);\n        \n        if (isStakeHolder == true){\n            let stakeAmount = await contract.stakedTokens(defaultAccount);\n            setStakeBalance(stakeAmount);\n        }\n    }\n\n    const stakeHandler = async () => {\n        let contractAddress = await contract.address;\n        let allowance = await contract.allowance(defaultAccount, contractAddress);\n        let allowanceBalance = allowance / Math.pow(10, 18);\n\n        // if (allowanceBalance > )\n    }\n\n    useEffect(() =>{\n        if (contract != null){\n            approveOrStake();\n            getStakeBalance();\n        } else {\n            setApproveOrStake(\"Approve\");\n        }\n    },[contract])\n\n    return (\n        <div>\n            <form>\n                <h3>Stake tokens </h3>\n                <p>Amount</p>\n                <input type='number' id='stakeAmount' min='0'></input>\n                <button type='submit'>{ApproveOrStake}</button>\n            </form>\n            <div>\n                <h3>Staked balance: {stakeBalance}</h3>\n            </div>\n        </div>\n\n    );\n\n}\n\nexport default Interactions;"]},"metadata":{},"sourceType":"module"}