{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/michaelyoung/repos/SlugToken/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/michaelyoung/repos/SlugToken/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/michaelyoung/repos/SlugToken/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/michaelyoung/repos/SlugToken/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/michaelyoung/repos/SlugToken/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nvar _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  var fetcher = \"Web3LegacyFetcher\";\n  return function (method, params) {\n    var _this = this;\n\n    var request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise(function (resolve, reject) {\n      _this.emit(\"debug\", {\n        action: \"request\",\n        fetcher: fetcher,\n        request: deepCopy(request),\n        provider: _this\n      });\n\n      sendFunc(request, function (error, response) {\n        if (error) {\n          _this.emit(\"debug\", {\n            action: \"response\",\n            fetcher: fetcher,\n            error: error,\n            request: request,\n            provider: _this\n          });\n\n          return reject(error);\n        }\n\n        _this.emit(\"debug\", {\n          action: \"response\",\n          fetcher: fetcher,\n          request: request,\n          response: response,\n          provider: _this\n        });\n\n        if (response.error) {\n          var _error = new Error(response.error.message);\n\n          _error.code = response.error.code;\n          _error.data = response.error.data;\n          return reject(_error);\n        }\n\n        resolve(response.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    var _this2 = this;\n\n    if (params == null) {\n      params = [];\n    }\n\n    var request = {\n      method: method,\n      params: params\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      fetcher: \"Eip1193Fetcher\",\n      request: deepCopy(request),\n      provider: this\n    });\n    return provider.request(request).then(function (response) {\n      _this2.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request: request,\n        response: response,\n        provider: _this2\n      });\n\n      return response;\n    }, function (error) {\n      _this2.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request: request,\n        error: error,\n        provider: _this2\n      });\n\n      throw error;\n    });\n  };\n}\n\nexport var Web3Provider = /*#__PURE__*/function (_JsonRpcProvider) {\n  _inherits(Web3Provider, _JsonRpcProvider);\n\n  var _super = _createSuper(Web3Provider);\n\n  function Web3Provider(provider, network) {\n    var _this3;\n\n    _classCallCheck(this, Web3Provider);\n\n    logger.checkNew(this instanceof Web3Provider ? this.constructor : void 0, Web3Provider);\n\n    if (provider == null) {\n      logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    var path = null;\n    var jsonRpcFetchFunc = null;\n    var subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    _this3 = _super.call(this, path, network);\n    defineReadOnly(_assertThisInitialized(_this3), \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(_assertThisInitialized(_this3), \"provider\", subprovider);\n    return _this3;\n  }\n\n  _createClass(Web3Provider, [{\n    key: \"send\",\n    value: function send(method, params) {\n      return this.jsonRpcFetchFunc(method, params);\n    }\n  }]);\n\n  return Web3Provider;\n}(JsonRpcProvider);","map":{"version":3,"mappings":"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","names":["deepCopy","defineReadOnly","Logger","version","logger","JsonRpcProvider","_nextId","buildWeb3LegacyFetcher","provider","sendFunc","fetcher","method","params","request","id","jsonrpc","Promise","resolve","reject","emit","action","error","response","Error","message","code","data","result","buildEip1193Fetcher","then","Web3Provider","network","checkNew","throwArgumentError","path","jsonRpcFetchFunc","subprovider","host","isMetaMask","sendAsync","bind","send"],"sources":["/Users/michaelyoung/repos/SlugToken/node_modules/@ethersproject/providers/src.ts/web3-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        logger.checkNew(new.target, Web3Provider);\n\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}